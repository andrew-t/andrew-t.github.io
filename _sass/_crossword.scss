.crossword {
	@include text-sized-block;
	border: 1px solid black;
	border-collapse: collapse;
	box-model: border-box;

	td {
		border: 1px solid black;
		box-model: border-box;
		font-size: 0.75em;
		&.block {
			background: black;
		}
		overflow: hidden;
		vertical-align: top;
		padding: 0;
		margin: 0;

		position: relative;
		.value, &:before {
			position: absolute;
			top: 0;
			left: 0;
			width: 100%;
			height: 100%;
			display: block;
			text-align: center;
			text-transform: uppercase;
		}
		&:before {
			color: #aaf;
		}
	}

	&:focus {
		outline: none;
		.selected {
			background: #ccf;
		}
	}
}

.crossword.across:focus .selected:before {
	content: '→';
}
.crossword.down:focus .selected:before {
	content: '↓';
}

@for $i from 5 through 25 {
	.crossword[width="#{$i}"] td {
		width: #{100% / $i};
	}
	.crossword[height="#{$i}"] td {
		height: #{$line-length * 1rem / $i};
	}
}

ul.clues {
	list-style: none;
	li {
		margin-left: 2em;
		text-indent: -2em;
		.clue-number {
			&:after {
				content: '.';
			}
		}
	}
}

@media (min-width: 800px) and (min-aspect-ratio: 3/2) {
	article > *,
	header > *,
	footer.banner > * {
		padding-left: calc(100vh + 1rem) !important;
		padding-right: 1em !important;
	}
	article {
		> ul {
			margin-left: 1em !important;
			margin-right: 1em !important;
			li {
				text-align: left;
			}
		}
		> .crossword {
			position: fixed;
			z-index: 5;
			background: white;
			left: 0;
			top: 0;
			width: 100vh;
			height: 100vh;
			td {
				font-size: 2vh;
			}
		}
		@for $i from 5 through 25 {
			> .crossword[width="#{$i}"] td {
				width: calc(#{100vh / $i} - 1px);
			}
			> .crossword[height="#{$i}"] td {
				height: calc(#{100vh / $i} - 1px);
				> .value, &:before {
					line-height: calc(#{100vh / $i} - 1px);
					font-size: calc(#{90vh / $i} - 1px);
				}
			}
		}
	}
}
